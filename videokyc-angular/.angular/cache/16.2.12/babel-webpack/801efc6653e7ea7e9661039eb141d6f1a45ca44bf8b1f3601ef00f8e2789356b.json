{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IpaddressService {\n  constructor(http) {\n    this.http = http;\n  }\n  getIp() {\n    return this.http.get(\"https://ipapi.co/json\");\n  }\n  static #_ = this.ɵfac = function IpaddressService_Factory(t) {\n    return new (t || IpaddressService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IpaddressService,\n    factory: IpaddressService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["IpaddressService","constructor","http","getIp","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\01_TAD\\videokyc project\\videokyc\\videokyc-angular\\src\\app\\services\\ipaddress.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpaddressService {\n\n  constructor(private http: HttpClient) { }\n\n  getIp(){\n    return this.http.get(\"https://ipapi.co/json\")\n  }\n\n\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAAA;IACH,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,uBAAuB,CAAC;EAC/C;EAAC,QAAAC,CAAA,G;qBANUL,gBAAgB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBV,gBAAgB;IAAAW,OAAA,EAAhBX,gBAAgB,CAAAY,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}